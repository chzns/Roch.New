--1.ProcessCodeData.js
export function GetProcessCodeDataDropDownList(data) {
  return store.dispatch('GetDataFilter').then(dataFilter => {
    return request({
      url: baseUrl + '/api/ProcessCodeData/GetProcessCodeDataDropDownList',
      method: 'post',
      data: data
    })
  })
}


--2.ProcessCodeDataController.cs

        [HttpPost]
        [ValidateModelStateAttribute]
        public async Task<ActionResult> GetProcessCodeDataDropDownList([FromHeader] string EmployeeId, [FromHeader] string LangCode, [FromBody] ProcessCodeDataDropDownListParameters request)
        {
            try
            {
                request.CreatedBy = EmployeeId;
                return Ok(await _ProcessCodeDataMgr.GetProcessCodeDataDropDownList(request));
            }
            catch (Exception e)
            {
                return BadRequest(e);
            }
        }

--3.ProcessCodeDataBusiness.cs 

public async Task<List<ProcessCodeDataDropDownList>> GetProcessCodeDataDropDownList(ProcessCodeDataDropDownListParameters request)
        {
            return await _ProcessCodeDataMgr.GetProcessCodeDataDropDownList(request);
        }


--4.ProcessCodeData.Respoitory.cs
  public async Task<List<ProcessCodeDataDropDownList>> GetProcessCodeDataDropDownList(ProcessCodeDataDropDownListParameters parm)
        {
            try
            {
                DynamicParameters sParam = new DynamicParameters();
                sParam.Add("Attribute_Type", parm.Attribute_Type);
                sParam.Add("Where_1", parm.Where_1);
                sParam.Add("Where_2", parm.Where_2);
                sParam.Add("Where_3", parm.Where_3);
                sParam.Add("CreatedBy", parm.CreatedBy);
                var db = conn;
                using (var multi = await db.QueryMultipleAsync($"[dbo].[JA_GetDropDownlistP]", sParam, commandType: CommandType.StoredProcedure))
                {
                    return multi.Read<ProcessCodeDataDropDownList>().ToList();
                }
            }
            catch (Exception e)
            {
                throw e;
            }

        }

 -5. ProcessCodeData.Entity.cs
 public partial class ProcessCodeDataDropDownList
    {
        public string label { get; set; }
        public string value { get; set; }
        public string col1 { get; set; }

    }


    public class ProcessCodeDataDropDownListParameters : Page
    { 
         public string Attribute_Type { get; set; }

        public string Where_1 { get; set; }

        public string Where_2 { get; set; }

        public string Where_3 { get; set; }
    
    }
